// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: local_quaternion.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "local_quaternion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* LocalQuaternion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LocalQuaternion_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_local_5fquaternion_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_local_5fquaternion_2eproto() {
  protobuf_AddDesc_local_5fquaternion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "local_quaternion.proto");
  GOOGLE_CHECK(file != NULL);
  LocalQuaternion_descriptor_ = file->message_type(0);
  static const int LocalQuaternion_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalQuaternion, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalQuaternion, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalQuaternion, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalQuaternion, w_),
  };
  LocalQuaternion_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LocalQuaternion_descriptor_,
      LocalQuaternion::default_instance_,
      LocalQuaternion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalQuaternion, _has_bits_[0]),
      -1,
      -1,
      sizeof(LocalQuaternion),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalQuaternion, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_local_5fquaternion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LocalQuaternion_descriptor_, &LocalQuaternion::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_local_5fquaternion_2eproto() {
  delete LocalQuaternion::default_instance_;
  delete LocalQuaternion_reflection_;
}

void protobuf_AddDesc_local_5fquaternion_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_local_5fquaternion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026local_quaternion.proto\022\013gazebo.msgs\"=\n"
    "\017LocalQuaternion\022\t\n\001x\030\002 \002(\001\022\t\n\001y\030\003 \002(\001\022\t"
    "\n\001z\030\004 \002(\001\022\t\n\001w\030\005 \002(\001", 100);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "local_quaternion.proto", &protobuf_RegisterTypes);
  LocalQuaternion::default_instance_ = new LocalQuaternion();
  LocalQuaternion::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_local_5fquaternion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_local_5fquaternion_2eproto {
  StaticDescriptorInitializer_local_5fquaternion_2eproto() {
    protobuf_AddDesc_local_5fquaternion_2eproto();
  }
} static_descriptor_initializer_local_5fquaternion_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalQuaternion::kXFieldNumber;
const int LocalQuaternion::kYFieldNumber;
const int LocalQuaternion::kZFieldNumber;
const int LocalQuaternion::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalQuaternion::LocalQuaternion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gazebo.msgs.LocalQuaternion)
}

void LocalQuaternion::InitAsDefaultInstance() {
}

LocalQuaternion::LocalQuaternion(const LocalQuaternion& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gazebo.msgs.LocalQuaternion)
}

void LocalQuaternion::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  w_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LocalQuaternion::~LocalQuaternion() {
  // @@protoc_insertion_point(destructor:gazebo.msgs.LocalQuaternion)
  SharedDtor();
}

void LocalQuaternion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LocalQuaternion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalQuaternion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LocalQuaternion_descriptor_;
}

const LocalQuaternion& LocalQuaternion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_local_5fquaternion_2eproto();
  return *default_instance_;
}

LocalQuaternion* LocalQuaternion::default_instance_ = NULL;

LocalQuaternion* LocalQuaternion::New(::google::protobuf::Arena* arena) const {
  LocalQuaternion* n = new LocalQuaternion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalQuaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:gazebo.msgs.LocalQuaternion)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LocalQuaternion, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LocalQuaternion*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, w_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LocalQuaternion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gazebo.msgs.LocalQuaternion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 2;
      case 2: {
        if (tag == 17) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_y;
        break;
      }

      // required double y = 3;
      case 3: {
        if (tag == 25) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_z;
        break;
      }

      // required double z = 4;
      case 4: {
        if (tag == 33) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_w;
        break;
      }

      // required double w = 5;
      case 5: {
        if (tag == 41) {
         parse_w:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w_)));
          set_has_w();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gazebo.msgs.LocalQuaternion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gazebo.msgs.LocalQuaternion)
  return false;
#undef DO_
}

void LocalQuaternion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gazebo.msgs.LocalQuaternion)
  // required double x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // required double y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // required double z = 4;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->z(), output);
  }

  // required double w = 5;
  if (has_w()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->w(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gazebo.msgs.LocalQuaternion)
}

::google::protobuf::uint8* LocalQuaternion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gazebo.msgs.LocalQuaternion)
  // required double x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // required double y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // required double z = 4;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->z(), target);
  }

  // required double w = 5;
  if (has_w()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->w(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gazebo.msgs.LocalQuaternion)
  return target;
}

int LocalQuaternion::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:gazebo.msgs.LocalQuaternion)
  int total_size = 0;

  if (has_x()) {
    // required double x = 2;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 3;
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double z = 4;
    total_size += 1 + 8;
  }

  if (has_w()) {
    // required double w = 5;
    total_size += 1 + 8;
  }

  return total_size;
}
int LocalQuaternion::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gazebo.msgs.LocalQuaternion)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required double x = 2;
    total_size += 1 + 8;

    // required double y = 3;
    total_size += 1 + 8;

    // required double z = 4;
    total_size += 1 + 8;

    // required double w = 5;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalQuaternion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gazebo.msgs.LocalQuaternion)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LocalQuaternion* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalQuaternion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gazebo.msgs.LocalQuaternion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gazebo.msgs.LocalQuaternion)
    MergeFrom(*source);
  }
}

void LocalQuaternion::MergeFrom(const LocalQuaternion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gazebo.msgs.LocalQuaternion)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_w()) {
      set_w(from.w());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LocalQuaternion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gazebo.msgs.LocalQuaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalQuaternion::CopyFrom(const LocalQuaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gazebo.msgs.LocalQuaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalQuaternion::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void LocalQuaternion::Swap(LocalQuaternion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalQuaternion::InternalSwap(LocalQuaternion* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(w_, other->w_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalQuaternion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LocalQuaternion_descriptor_;
  metadata.reflection = LocalQuaternion_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocalQuaternion

// required double x = 2;
bool LocalQuaternion::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LocalQuaternion::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void LocalQuaternion::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void LocalQuaternion::clear_x() {
  x_ = 0;
  clear_has_x();
}
 double LocalQuaternion::x() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.LocalQuaternion.x)
  return x_;
}
 void LocalQuaternion::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.LocalQuaternion.x)
}

// required double y = 3;
bool LocalQuaternion::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LocalQuaternion::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void LocalQuaternion::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void LocalQuaternion::clear_y() {
  y_ = 0;
  clear_has_y();
}
 double LocalQuaternion::y() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.LocalQuaternion.y)
  return y_;
}
 void LocalQuaternion::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.LocalQuaternion.y)
}

// required double z = 4;
bool LocalQuaternion::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LocalQuaternion::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void LocalQuaternion::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void LocalQuaternion::clear_z() {
  z_ = 0;
  clear_has_z();
}
 double LocalQuaternion::z() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.LocalQuaternion.z)
  return z_;
}
 void LocalQuaternion::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.LocalQuaternion.z)
}

// required double w = 5;
bool LocalQuaternion::has_w() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LocalQuaternion::set_has_w() {
  _has_bits_[0] |= 0x00000008u;
}
void LocalQuaternion::clear_has_w() {
  _has_bits_[0] &= ~0x00000008u;
}
void LocalQuaternion::clear_w() {
  w_ = 0;
  clear_has_w();
}
 double LocalQuaternion::w() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.LocalQuaternion.w)
  return w_;
}
 void LocalQuaternion::set_w(double value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.LocalQuaternion.w)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

// @@protoc_insertion_point(global_scope)
